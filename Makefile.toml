[config]
skip_core_tasks = true

[env]
PROFILE = "release"
BUILD_TARGET_DIR = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/wasm32-unknown-unknown/${PROFILE}"
BINDGEN_TARGET_DIR = "${BUILD_TARGET_DIR}/wasm-bindgen-stuff"
BUILD_ARTIFACT_NAME = "${CARGO_MAKE_CRATE_NAME}"
BUILD_OUTPUT_DIR = "wasm-target"

[tasks.format]
description = "Run rustfmt"
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--emit=files"]

[tasks.clean-wasm]
description = "Delete the wasm-target directory"
script_runner = "@shell"
script = '''
rm -rf ${BUILD_OUTPUT_DIR}
rm -rf ${BINDGEN_TARGET_DIR}
'''

[tasks.clean]
description = "Clean build files and wasm-target directory"
dependencies = ["clean-wasm"]
command = "cargo"
args = ["clean"]

[tasks.run-cargo-build]
description = "Build the wasm binary"
command = "cargo"
args = [
    "build",
    "--profile",
    "${PROFILE}",
    "--target",
    "wasm32-unknown-unknown",
]

[tasks.build-wasm-bin]
description = "Build & link the wasm binary into a playable web-page"
dependencies = ["clean-wasm", "run-cargo-build"]
install_crate = "wasm-bindgen-cli"
command = "wasm-bindgen"
args = [
    "--out-name",
    "generated",
    "--out-dir",
    "${BINDGEN_TARGET_DIR}",
    "--target",
    "web",
    "${BUILD_TARGET_DIR}/${BUILD_ARTIFACT_NAME}.wasm",
]

[tasks.run-opt]
condition = { env_set = ["RUN_OPTIMIZATION"] }
description = "Generate an optimized version of the wasm binary"
dependencies = ["build-wasm-bin"]
install_crate = "wasm-opt"
command = "wasm-opt"
args = [
    "-Oz",
    "--output",
    "${BINDGEN_TARGET_DIR}/optimized_bg.wasm",
    "${BINDGEN_TARGET_DIR}/generated_bg.wasm",
]

[tasks.copy-opt]
condition = { env_set = ["RUN_OPTIMIZATION"] }
description = "Generate optimized wasm binary and replace the old binary"
dependencies = ["run-opt"]
script_runner = "@shell"
script = '''
mv ${BINDGEN_TARGET_DIR}/optimized_bg.wasm ${BINDGEN_TARGET_DIR}/generated_bg.wasm
'''

[tasks.copy-files]
description = "Copy static site files & assets into the wasm-target directory"
dependencies = ["copy-opt"]
script_runner = "@shell"
script = '''
mkdir -p ${BUILD_OUTPUT_DIR}/target
cp -r ./src/site/* ${BUILD_OUTPUT_DIR}/
cp -r ./assets ${BUILD_OUTPUT_DIR}/
cp ${BINDGEN_TARGET_DIR}/generated_bg.wasm ${BUILD_OUTPUT_DIR}/target/
cp ${BINDGEN_TARGET_DIR}/generated.js ${BUILD_OUTPUT_DIR}/target/
'''

[tasks.build]
description = "Run full build process and put output in wasm-target directory"
run_task = "copy-files"

[tasks.build-release]
env = { "PROFILE" = "release-wasm", "RUN_OPTIMIZATION" = "1" }
description = "Build an optimized release version of the game"
run_task = "copy-files"

[tasks.default]
run_task = "build"

[tasks.serve]
description = "Build and serve a copy of the playable page"
dependencies = ["copy-assets"]
install_crate = "basic-http-server"
command = "basic-http-server"
args = ["./wasm-target"]
